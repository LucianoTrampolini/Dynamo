-- Script generated by MySQL Compare 1.0.0.425 on 5/1/2015 2:53:33 PM

SET @ORIGINAL_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @ORIGINAL_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @ORIGINAL_SQL_MODE=@@SQL_MODE, SQL_MODE='ALLOW_INVALID_DATES,NO_AUTO_VALUE_ON_ZERO,NO_AUTO_CREATE_USER';

USE `dynamo`;

CREATE TABLE `persoon` (
  `Id` int(11) NOT NULL,
  `Naam` varchar(50) NULL,
  `Adres` varchar(50) NULL,
  `Plaats` varchar(50) NULL,
  `Telefoon` varchar(15) NULL,
  `Email` varchar(50) NULL,
  `Verwijderd` tinyint(1) NOT NULL,
  `Gewijzigd` datetime NOT NULL,
  `GewijzigdDoorId` int(11) NULL,
  `Aangemaakt` datetime NOT NULL,
  `AangemaaktDoorId` int(11) NULL,
  `facebook_user_facebook_id` varchar(200) NULL,
  `Gecontroleerd` bit(1) NULL,
  `BoekingLimiet` tinyint(4) NULL,
  PRIMARY KEY (`Id`),
  FOREIGN KEY (`facebook_user_facebook_id`) REFERENCES `facebook_user` (`facebook_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  KEY `IX_FACEBOOK_USER`(`facebook_user_facebook_id`)
) ENGINE=InnoDB;

CREATE TABLE `bandlid` (
  `PersoonId` int(11) NOT NULL,
  `BandId` int(11) NOT NULL,
  `verwijderd` tinyint(1) NULL,
  FOREIGN KEY (`BandId`) REFERENCES `band` (`Id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  FOREIGN KEY (`PersoonId`) REFERENCES `persoon` (`Id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  KEY `FK_BANDLID_BAND_idx`(`BandId`),
  KEY `FK_BANDLID_PERSOON_idx`(`PersoonId`)
) ENGINE=InnoDB;

ALTER TABLE `boeking`
  ADD COLUMN `PersoonId` int(11) NULL;

CREATE INDEX `FK_BOEKING_PERSOON_idx` ON `boeking`(`PersoonId`);

ALTER TABLE `boeking` ADD FOREIGN KEY (`PersoonId`) REFERENCES `persoon` (`Id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

SET FOREIGN_KEY_CHECKS=@ORIGINAL_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@ORIGINAL_UNIQUE_CHECKS;
SET SQL_MODE=@ORIGINAL_SQL_MODE;

INSERT INTO persoon(Id,Naam,Adres,Plaats,Telefoon,Email,Verwijderd,Gewijzigd,GewijzigdDoorId,Aangemaakt,AangemaaktDoorId)
Select Id,Naam,Adres,Plaats,Telefoon,Email,Verwijderd,Gewijzigd,GewijzigdDoorId,Aangemaakt,AangemaaktDoorId FROM contactpersoon;

INSERT INTO bandlid(persoonId,BandId) SELECT Id, BandId from contactpersoon;