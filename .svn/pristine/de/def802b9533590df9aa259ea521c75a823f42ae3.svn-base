using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Dynamo.Model;

namespace Dynamo.BL.Base
{
    public abstract class BusinessRuleBase<E> where E : Model.Base.ModelBase 
    {
        private DynamoContext _currentContext = null;

        public BusinessRuleBase(DynamoContext context)
        {
            _currentContext = context;    
        }

        public virtual bool Execute(E entity)
        {
            throw new NotImplementedException("Implementeer in afgeleide");
        }



        //protected bool HasPropertyChanged(Model.Base.ModelBase entity, string property)
        //{
        //    var entry = currentContext.Entry(entity);
        //    return (entry.State == System.Data.EntityState.Modified) && entry.CurrentValues.PropertyNames
        //               .Where(p => entry.Property(p).IsModified).Contains(property);

        //}
    }
}
